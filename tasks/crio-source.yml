---

- name: ensure build packages are installed
  apt:
    name: "{{ crio_build_packages }}"
  retries: 5
  delay: 2

- name: checkout cri-o from github
  git:
    repo: "{{ crio_repo }}"
    dest: "{{ crio_build_dir }}"
    version: "{{ crio_tag }}"

- name: test crio version 
  shell: "{{ crio_binary_install_path }} --version"
  register: test_crio_version
  ignore_errors: True
  changed_when: False

- name: test if crio is already installed
  stat:
    path: "{{ crio_binary_install_path }}"
  register: crio_installed
  ignore_errors: true

- name: debug test_crio_version
  debug:
    var: test_crio_version
    verbosity: "2"

- name: set current crio version
  set_fact:
    current_crio_version: "{{ test_crio_version.stdout_lines[0] | trim }}"
  when: test_crio_version.rc == 0

- name: set expected crio version
  set_fact:
    expected_crio_version: "crio version {{ crio_version }}"

- name: debug crio_update
  debug:
    var: crio_update
    verbosity: "2"

# NOTE: crio install instructions say install.tools, make, install, 
# install.config but make module can't understand empty entry so need 
# to do these serially instead of using a with_items.
- name: build and install crio
  block:

    - name: make install.tools
      make:
        chdir: "{{ crio_build_dir }}"
        target: "install.tools"

    - name: make
      make:
        chdir: "{{ crio_build_dir }}"

    - name: make install
      make:
        chdir: "{{ crio_build_dir }}"
        target: "install"

    - name: make install.config
      make:
        chdir: "{{ crio_build_dir }}"
        target: "install.config"

  when: > 
    test_crio_version.failed or
    not crio_installed.stat.exists or
    ( current_crio_version is defined and 
      current_crio_version != expected_crio_version and 
      crio_upgrade )

# FIXME: policy.json maybe solved by installed skopeo?
- name: ensure /etc/containers exists
  file:
    path: "/etc/containers"
    state: "directory"

- name: install /etc/containers/policy.json from template
  template:
    src: "etc/containers/policy.json"
    dest: "/etc/containers/policy.json"

- name: configure image repositories in crio.conf
  ini_file:
    path: "/etc/crio/crio.conf"
    section: "crio.image"
    option: "registries"
    value: "['docker.io']"